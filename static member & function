 static attributes exist beyond a particular instance of a class, 
 but do not extend into conflict with other static attributes defined within other classes.

Using constexpr instead of const
static float constexpr pi_{3.14159};


Just like static member variables, static member functions are instance-independent: 
they belong to the class, not to any particular instance of the class.
One corollary to this is that we can method invoke a static member function without ever creating an instance of the class.
用static function，即使不建立一个实例，也可以直接计算这个类的体积，
#include <cassert>
#include <cmath>
#include <stdexcept>

class Sphere {
 public:
   static float Volume(int radius) {
       return pi_ * 4/3 * pow(radius,3);
   }

 private:
  static float constexpr pi_{3.14159};
};

// Test
int main(void) {
  assert(abs(Sphere::Volume(5) - 523.6) < 1);
}
